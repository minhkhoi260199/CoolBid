package com.app.main.models;
// Generated Apr 3, 2021, 11:02:42 AM by Hibernate Tools 5.1.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;

import com.app.main.models.AmountTime;
import com.app.main.models.Auction;
import com.app.main.models.Category;
import com.app.main.models.Status;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import com.app.main.models.Users;
import com.fasterxml.jackson.annotation.JsonFormat;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", catalog = "data_shop")
public class Product implements java.io.Serializable {

	private Integer id;
	private AmountTime amountTime;
	private Category category;
	private Status status;
	private String image;
	private Users users;
	@NotEmpty
	private String name;
	private String description;
	
	@Min(0)
	@NotNull
	private Double startPrice;
	@Min(0)
	@NotNull
	private Double gap;
//	@JsonFormat(timezone = "GMT+07:00")
	private Date startTime;
	private Set<Auction> auctions = new HashSet<Auction>(0);

	public Product() {
	}

	public Product(AmountTime amountTime, Category category, Status status, Users users, String name,
			String description, String image, Double startPrice, Double gap, Date startTime, Set<Auction> auctions) {
		this.amountTime = amountTime;
		this.category = category;
		this.status = status;
		this.users = users;
		this.name = name;
		this.description = description;
		this.image = image;
		this.startPrice = startPrice;
		this.gap = gap;
		this.startTime = startTime;
		this.auctions = auctions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "amount_time_id")
	public AmountTime getAmountTime() {
		return this.amountTime;
	}

	public void setAmountTime(AmountTime amountTime) {
		this.amountTime = amountTime;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id")
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status_id")
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "seller_id")
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "name", length = 250)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "image", length = 65535)
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@Column(name = "start_price", precision = 22, scale = 0)
	public Double getStartPrice() {
		return this.startPrice;
	}

	public void setStartPrice(Double startPrice) {
		this.startPrice = startPrice;
	}

	@Column(name = "gap", precision = 22, scale = 0)
	public Double getGap() {
		return this.gap;
	}

	public void setGap(Double gap) {
		this.gap = gap;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_time", length = 19)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Auction> getAuctions() {
		return this.auctions;
	}

	public void setAuctions(Set<Auction> auctions) {
		this.auctions = auctions;
	}

}
